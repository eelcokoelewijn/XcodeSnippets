{
  "scopes" : [
    "TopLevel"
  ],
  "summary" : "Coordinating view setup",
  "userSnippet" : true,
  "title" : "Coordinator",
  "completionPrefix" : "swift_coordinator",
  "language" : "Xcode.SourceCodeLanguage.Generic",
  "contents" : "public protocol <#coordinator-name#>CoordinatorDelegate: class {\n    func <#coordinator-name#>Action(_ coordinator: <#coordinator-name#>Coordinator)\n}\n\npublic final class <#coordinator-name#>Coordinator: Coordinator {\n    public weak var delegate: <#coordinator-name#>CoordinatorDelegate?\n\n    public init(navigationController: UINavigationController) {\n        self._navigationController = navigationController\n    }\n\n    public func start() {\n        showViewController()\n    }\n\n    private func showViewController() {\n        \/\/ Construct viewcontroller\n        let viewController = UIViewController()\n        \/\/ Set delegate self, to handle dismissal\n        viewController.delegate = self\n        viewController.view.backgroundColor = .blue\n        _navigationController.viewControllers = [viewController]\n    }\n\n    private let _navigationController: UINavigationController\n}\n\n\/\/ MARK: - Delegate callbacks from view controllers\n \nextension <#coordinator-name#>Coordinator: <#coordinator-name#>ViewControllerDelegate {\n    func <#coordinator-name#>ViewController() {\n        delegate?.<#coordinator-name#>Action(self)\n    }\n}",
  "identifier" : "6840EAB4-5E64-4B1E-81D9-91F78012CCFD",
  "version" : 2
}